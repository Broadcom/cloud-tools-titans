{{- define "titan-mesh-helm-lib-chart.ratelimit.descriptors" }}
  {{- $ingress := .ingress }}
  {{- $routes :=.routes }}
  {{- $clusters := .clusters }}
  {{- $ingressRatelimit := $ingress.ratelimit }}
  {{- $ratelimitEnabled := (ternary $ingressRatelimit.enabled "true" (hasKey $ingressRatelimit "enabled")) }}
  {{- $limits := $ingressRatelimit.limits }}
  {{- $hashLen := 16 }}
  {{- $hasRatelimit := false }}
  {{- range $routes }}
    {{- $ratelimit := .ratelimit }}
    {{- if ternary $ratelimit.enabled ($ratelimit | default false) (hasKey $ratelimit "enabled") }}
      {{- $hasRatelimit = true }}
    {{- end }}
  {{- end }}
  {{- if and $ratelimitEnabled $hasRatelimit }}
  descriptors:
    {{- range $routes }}
      {{- $ratelimit := .ratelimit }}
      {{- if (ternary $ratelimit.enabled ($ratelimit | default false) (hasKey $ratelimit "enabled")) }}
        {{- $l1hash := . | toString | sha1sum }}
        {{- $matches := .empty }}
        {{- if .match }}
          {{- $matches = list .match }}
        {{- else }}
          {{- $clusterName := "local-myapp" }}
          {{- if .route }}
            {{- if .route.cluster }}
              {{- $clusterName = .route.cluster }}
            {{- end }}
          {{- end }}
          {{- $cluster := index $clusters $clusterName }}
          {{- $matches = $cluster.routes }}
        {{- end }}
        {{- $actions := $ratelimit.actions }}
        {{- range $actions }}
          {{- $indent := "" }}
          {{- $action := . }}
          {{- $l2hash := . | toString | sha1sum }}
          {{- range $matches }}
  {{ $indent }}- key: header_match
  {{ $indent }}  value: {{ printf "keyval_%s" ((printf "%s:%s:%s" $l1hash $l2hash (. | toString)) |  sha1sum | trunc $hashLen) }}
            {{- range $action.match }}
  {{ $indent }}  descriptors:
              {{- $indent = printf "%s  " $indent }}
              {{- if or .eq .neq .sw .nsw .ew .new .co .nco .lk .nlk .pr .npr }}
  {{ $indent }}- key: header_match
  {{ $indent }}  value: {{ printf "keyval_%s" ((printf "%s:%s:%s" $l1hash $l2hash (. | toString)) |  sha1sum  | trunc $hashLen) }}
              {{- else }}
                {{- if or (hasPrefix "payload." .key) (hasPrefix "token." .key) }}
  {{ $indent }}- key: header_match
  {{ $indent }}  value: {{ printf "keyval_%s" ((printf "%s:%s:%s" $l1hash $l2hash (. | toString)) |  sha1sum  | trunc $hashLen) }}
  {{ $indent }}  descriptors:
                  {{- $indent = printf "%s  " $indent }}
                {{- end }}
  {{ $indent }}- key: {{ printf "key_%s" ((printf "%s:%s:%s" $l1hash $l2hash (. | toString)) |  sha1sum  | trunc $hashLen) }}
              {{- end }}
            {{- end }}
            {{- $actionLimit := $action.limit }}
            {{- if not (contains "/" $actionLimit) }}
              {{- $actionLimit = index $limits $actionLimit }}
            {{- end }}
            {{- $limit := (regexSplit "/" $actionLimit -1) }}
  {{ $indent }}  rate_limit:
  {{ $indent }}    unit: {{ index $limit 1 }}
  {{ $indent }}    requests_per_unit: {{ index $limit 0 }}
            {{- if $action.preview }} 
  {{ $indent }}  shadow_mode: {{ $action.preview }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- else }}
  descriptors: []
  {{- end }}
{{- end }}