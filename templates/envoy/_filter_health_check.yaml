{{- define "titan-mesh-helm-lib-chart.envoy.filter.healthcheck" }}
  {{- $clusters := .clusters -}}
  {{- $opa := .opa }}
  {{- $healthCheckCriticalLocalSidecars := .healthCheckCriticalLocalSidecars -}}
  {{- $opaEnabled := $opa.enabled }}
  {{- $opaMonitorByEnvoy := $opa.monitorByEnvoy -}}
  {{- $ratelimit := .ratelimit }}
  {{- $ratelimitEnabled := $ratelimit.enabled }}
  {{- $ratelimitMonitorByEnvoy := $ratelimit.monitorByEnvoy -}}
  {{- $ratelimitIncludeIntoHealthState := $ratelimit.includeIntoHealthState -}}
  {{- $remoteApp := index $clusters "remote-myapp" -}}
  {{- $localApp := index $clusters "local-myapp" }}
  {{- $gateway := $localApp.gateway }}
  {{- $gatewayEnable := $gateway.enabled | default false }}
  {{- $gatewaycheckUpstreamClusters := $gateway.checkUpstreamClusters | default false }}
  {{- $healthChecks := $remoteApp.healthChecks  }}
- name: envoy.filters.http.health_check
  typed_config:
    "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
  {{- if $gatewayEnable }}
    {{- if or $gatewaycheckUpstreamClusters $healthCheckCriticalLocalSidecars -}}
      {{- $foundCriticalCluster := false -}}
      {{- range $k, $v := $clusters }}
        {{- if $v.critical -}}
          {{- if $gatewaycheckUpstreamClusters -}}
            {{- $foundCriticalCluster = true -}}
          {{- else if and $healthCheckCriticalLocalSidecars (hasPrefix "local-" $k) -}}
            {{- $foundCriticalCluster = true -}}
          {{- end -}}
        {{- end -}}
      {{- end -}}
      {{- if $foundCriticalCluster }}
    cluster_min_healthy_percentages:
        {{- $minHealth := $gateway.minHealthRatio | default "25" -}}
        {{- range $k, $v := $clusters }}
          {{- if and (ne $k "local-myapp") (ne $k "remote-myapp") }}
            {{- if $v.critical }}
              {{- if $gatewaycheckUpstreamClusters }}
      {{ printf "%s:" $k }}
        {{ printf "value: %s" $minHealth }}
              {{- else if and $healthCheckCriticalLocalSidecars (hasPrefix "local-" $k) }}
      {{ printf "%s:" $k }}
        {{ printf "value: 100" }}
              {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end -}}
    {{- end -}}
  {{- else }}
    cluster_min_healthy_percentages:
      local-myapp:
        value: 100
    {{- if and $opaEnabled $opaMonitorByEnvoy }}
      opa-health:
        value: 100
    {{- end }}
    {{- if and $ratelimitEnabled $ratelimitMonitorByEnvoy $ratelimitIncludeIntoHealthState }}
      ratelimit-health:
        value: 100
    {{- end }}
    {{- if $healthCheckCriticalLocalSidecars }}
        {{- range $k, $v := $clusters }}
          {{- if and (ne $k "local-myapp") (ne $k "remote-myapp") }}
            {{- if $v.critical }}
              {{- if and $healthCheckCriticalLocalSidecars (hasPrefix "local-" $k) }}
      {{ printf "%s:" $k }}
        {{ printf "value: 100" }}
              {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
    {{- end }}
  {{- end }}
    headers:
    - name: :path
      exact_match: {{ $healthChecks.path | default "/healthz" }}
    pass_through_mode: false
{{- end }}