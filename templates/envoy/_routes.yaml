{{- define "titan-mesh-helm-lib-chart.envoy.filter.routes" }}
  {{- $titanSideCars := .titanSideCars }}
  {{- $validation := $titanSideCars.validation }}
  {{- $validationEnabled := false }}
  {{- if $validation }}
    {{- $validationEnabled = ternary $validation.enabled true (hasKey $validation "enabled") }}
  {{- end }}
  {{- $canaryRouteHeaderName := "x-epmp-route-by-release" }}
  {{- if $titanSideCars.canary -}}
    {{- if $titanSideCars.canary.routeHeaderName -}}
      {{- $canaryRouteHeaderName = $titanSideCars.canary.routeHeaderName -}}
    {{- end -}}
  {{- end -}}
  {{- $appName := .appName -}}
  {{- $direction := .direction -}}
  {{- $ingress := $titanSideCars.ingress }}
  {{- $egress := $titanSideCars.egress }}
  {{- $envoy := $titanSideCars.envoy }}
  {{- $clusters := $envoy.clusters }}
  {{- $remoteMyApp := index $clusters "remote-myapp" }}
  {{- $localMyApp := index $clusters "local-myapp" }}
  {{- $ingressRoutesFromLocalMyapp := false -}}
  {{- $gatewayEnable := false }}
  {{- $defaultBackend := "local-myapp" }}
  {{- if $localMyApp.gateway  -}}
    {{- $gatewayEnable = ternary $localMyApp.gateway.enabled true (hasKey $localMyApp.gateway "enabled") }}
    {{- if $gatewayEnable }}
      {{- $defaultBackend = ternary $localMyApp.gateway.defaultBackend "" (hasKey $localMyApp.gateway "defaultBackend") }}
    {{- end }}
  {{- end }}
                routes:
  {{- $routes := list }}
  {{- if and $gatewayEnable (eq $direction "ingress") }}
    {{- $releaseBaseLabel := "0000-00-0" -}}
    {{- $releaseClusters := include "titan-mesh-helm-lib-chart.envoy.canary.clusters" (dict "clusters" $clusters) | fromJson -}}
    {{- range $cn, $cl := $releaseClusters -}}
      {{- $route := dict "cluster" $cn -}}
      {{- $routes = append $routes (dict "route" $route) -}}
    {{- end -}}
  {{- else }}
    {{- $routes = ternary $ingress.routes $egress.routes (eq "ingress" $direction) }}
    {{- if and (eq "ingress" $direction) (not $routes) }}
      {{- if ternary $ingress.enabled true (hasKey $ingress "enabled") }}
        {{- $routes = $localMyApp.routes -}}
        {{- $ingressRoutesFromLocalMyapp = true -}}
      {{- end }}
    {{- end }}
    {{- $additionalRoutes := ternary $ingress.additionalRoutes $egress.additionalRoutes (eq "ingress" $direction) }}
    {{- if $additionalRoutes }}
      {{- if $routes }}
        {{- $routes = concat $additionalRoutes $routes }}
      {{- else }}
        {{- $routes = $additionalRoutes }}
      {{- end }}
    {{- end }}
    {{- $fallBackRoutes := ternary $ingress.fallBackRoutes $egress.fallBackRoutes (eq "ingress" $direction) }}
    {{- if $fallBackRoutes }}
      {{- if $routes }}
        {{- $routes = concat $routes $fallBackRoutes }}
      {{- else }}
        {{- $routes = $fallBackRoutes }}
      {{- end }}
    {{- end }} 
  {{- end }}
  {{- $appInfo := include "titan-mesh-helm-lib-chart.envoy.canary.service" $appName | fromJson -}}
  {{- range $routes }}
    {{- $route := .route }}
    {{- $match := .match -}}
    {{- $redirect := .redirect -}}
    {{- $directResponse := .directResponse -}}    
    {{- $clusterName := $route.cluster | default "" -}}
    {{- if and (ne $appInfo.name $clusterName) (or $route $redirect $directResponse $ingressRoutesFromLocalMyapp) }}
      {{- $clustersWithHeaders := dict -}}
      {{- $noCluster := "no-cluster" -}}
      {{- if eq $clusterName "" }}
        {{- if eq $direction "ingress" }}
          {{- if $route }}
            {{- $clusterName = "local-myapp" }}
            {{- $_ := set $clustersWithHeaders "local-myapp" (dict "headers" (list)) -}}
          {{- else }}
            {{- $clusterName = "" }}
            {{- $_ := set $clustersWithHeaders $noCluster (dict "headers" (list)) -}}
          {{- end }}
        {{- else if or $directResponse $redirect }}
          {{- $clusterName = "" }}
          {{- $_ := set $clustersWithHeaders $noCluster (dict "headers" (list)) -}}
        {{- else }}
          {{- fail "egress route requires cluster name"}}
        {{- end }}
      {{- end }}
      {{- if and (ne $clusterName "") (ne $clusterName "local-myapp") -}}
        {{- $clusterInfo := include "titan-mesh-helm-lib-chart.envoy.canary.service" $clusterName | fromJson -}}
        {{- $clustersWithHeaders = include "titan-mesh-helm-lib-chart.envoy.canary.egress.clusters.headers" (dict "titanSideCars" $titanSideCars "appName" $appName "service" $clusterInfo.name) | fromJson -}}
      {{- end -}}
      {{- $sortedClusters := keys $clustersWithHeaders | sortAlpha -}}
      {{- $orderedClusters := list -}}
      {{- range $sortedClusters -}}
        {{- $orderedClusters = prepend $orderedClusters . -}}
      {{- end -}}
      {{- range $orderedClusters -}}
        {{- $cn := . -}}
        {{- $cv := get $clustersWithHeaders $cn -}}
        {{- $cluster := ternary (index $clusters $cn) (dict) (ne $cn $noCluster) -}}
        {{- $retryPolicy := mergeOverwrite ($cluster.retryPolicy | default $remoteMyApp.retryPolicy | default dict) ($route.retryPolicy | default dict) }}
        {{- if or $cluster (or $directResponse $redirect) }}
          {{- if not $match }}
            {{- $retryOn := ternary "reset,connect-failure,refused-stream,retriable-status-codes" "reset,connect-failure,refused-stream,gateway-error,retriable-status-codes" (hasPrefix "local-" $clusterName) }}
            {{- if $validationEnabled }}
              {{- if not $cluster -}}
                {{- if $validation.clusters }}
                  {{- $cluster = index $validation.clusters $clusterName -}}
                {{- end }}
              {{- end -}}
            {{- end }}
            {{- range $cluster.routes }}
              {{- $clusterRoute := .route }}
                - match:
              {{- include "titan-mesh-helm-lib-chart.envoy.matcher-route" (dict "route" .match "routing" true "headers" $cv.headers) | nindent 18 }}
              {{- include "titan-mesh-helm-lib-chart.envoy.matcher-query-parameters" (dict "query_parameters" .match.query_parameters) | nindent 18 }}
              {{- range  $route.disableFilters }}
                {{- $disabledFilter := index $envoy.perRouteFilters . -}}
                {{- if $disabledFilter }}
                  typed_per_filter_config:
                  {{- printf "%s:" . | nindent 20 }}
                  {{- printf "%s: type.googleapis.com/%s" (print "@type" | quote) $disabledFilter.type | nindent 22 }}
                  {{- print "disabled: true" | nindent 22 }}
                {{- end }}
              {{- end }}
                  route:
              {{- if $clusterRoute.prefixRewrite }}
                    prefix_rewrite: {{ $clusterRoute.prefixRewrite }}
              {{- else if $clusterRoute.regexRewrite }}
                    regex_rewrite:
                      pattern:
                        google_re2: {}
                        regex: {{ $clusterRoute.regexRewrite.pattern }}
                      substitution: {{ $clusterRoute.regexRewrite.substitution }}
              {{- end }}
                    cluster: {{ $cn }}
              {{- if or (eq $direction "egress") $cluster.autoHostRewrite $route.autoHostRewrite }}
                    auto_host_rewrite: true
              {{- end }}
                    retry_policy:
                      num_retries: {{ coalesce $retryPolicy.numRetries "1" }}
                      retry_on: {{ coalesce $retryPolicy.retryOn $retryOn }}
              {{- if $retryPolicy.retriableStatusCode }}
                      retriable_status_codes: 
                {{- range $retryPolicy.retriableStatusCode }}
                        - {{ . }}
                {{- end }}
              {{- end }}
              {{- if $retryPolicy.hostSelectionRetryMaxAttempts }}
                      host_selection_retry_max_attempts: {{ $retryPolicy.hostSelectionRetryMaxAttempts }}
              {{- end }}
                    timeout: {{ coalesce $route.timeout $clusterRoute.timeout (ternary $remoteMyApp.timeout $cluster.timeout (or $gatewayEnable (eq $direction "egress"))) "15s" }}
            {{- end  }}
          {{- else }}
                - match:
            {{- include "titan-mesh-helm-lib-chart.envoy.matcher-route" (dict "route" $match "routing" true "headers" $cv.headers) | nindent 18 }}
            {{- if ne $clusterName "" }}
              {{- $retryOn := ternary "reset,connect-failure,refused-stream,retriable-status-codes" "reset,connect-failure,refused-stream,gateway-error,retriable-status-codes" (hasPrefix "local-" $clusterName) }}
              {{- include "titan-mesh-helm-lib-chart.envoy.matcher-query-parameters" (dict "query_parameters" $match.query_parameters) | nindent 18 }}
              {{- range $route.disableFilters }}
                {{- $disabledFilter := index $envoy.perRouteFilters . -}}
                {{- if $disabledFilter }}
                  typed_per_filter_config:
                  {{- printf "%s:" . | nindent 20 }}
                  {{- printf "%s: type.googleapis.com/%s" (print "@type" | quote) $disabledFilter.type | nindent 22 }}
                  {{- print "disabled: true" | nindent 22 }}
                {{- end }}
              {{- end }}
                  route:
                    cluster: {{ $cn }} 
              {{- if $route.prefixRewrite }}
                    prefix_rewrite: {{ $route.prefixRewrite }}
              {{- else if $route.regexRewrite }}
                    regex_rewrite:
                      pattern:
                        google_re2: {}
                        regex: {{ $route.regexRewrite.pattern }}
                      substitution: {{ $route.regexRewrite.substitution }}
              {{- end }}
              {{- if or (eq $direction "egress") $cluster.autoHostRewrite $route.autoHostRewrite }}
                    auto_host_rewrite: true
              {{- end }}
                    retry_policy:
                      num_retries: {{ coalesce $retryPolicy.numRetries "1" }}
                      retry_on: {{ coalesce $retryPolicy.retryOn $retryOn }}
              {{- if $retryPolicy.retriableStatusCode }}
                      retriable_status_codes: 
                {{- range $retryPolicy.retriableStatusCode }}
                        - {{ . }}
                {{- end }}
              {{- end }}
              {{- if $retryPolicy.hostSelectionRetryMaxAttempts }}
                      host_selection_retry_max_attempts: {{ $retryPolicy.hostSelectionRetryMaxAttempts }}
              {{- end }}
                    timeout: {{ coalesce $route.timeout (ternary $remoteMyApp.timeout $cluster.timeout (or $gatewayEnable (eq $direction "egress"))) "15s" }}
              {{- if or $route.idleTimeout $cluster.idleTimeout }}
                    idle_timeout: {{ coalesce $route.idleTimeout $cluster.idleTimeout }}
              {{- end }}
            {{- else if $directResponse }}
                  direct_response:
                    status: {{ $directResponse.status }}
              {{- if $directResponse.body }}
                    body:
                      inline_string: {{ $directResponse.body | squote }}
              {{- end }}
            {{- else if $redirect }}
                  redirect:
              {{- if eq $redirect.action "regex_rewrite" }}
                    regex_rewrite:
                      pattern:
                        google_re2: 
                          max_program_size: {{ $redirect.maxlen }}
                        regex: {{ $redirect.regex | squote }}
                      substitution: {{ $redirect.value | squote }}
              {{- else }}
                    {{ $redirect.action }}: {{ $redirect.value }}
              {{- end }}
              {{- if $redirect.responseCode }}
                    response_code: {{ $redirect.responseCode }}  
              {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end -}}
    {{- end }}
  {{- end }}
  {{- if eq $direction "ingress" }}
    {{- $cluster := index $envoy.clusters "local-myapp" }}
    {{- $retryPolicy := $cluster.retryPolicy }}
                - match:
                    prefix: /
    {{- if eq $defaultBackend "" }}
                  direct_response:
                    status: {{ $cluster.directResponseCode | default "404" }}
                    body:
                      inline_string: {{ ($cluster.directResponseMessage | default (printf "%s:No matching route" $appName)) | squote }}
    {{- else }}
                  route:
                    cluster: {{ $defaultBackend }}
                    retry_policy:
                      num_retries: {{ coalesce $retryPolicy.numRetries "1" }}
                      retry_on: {{ coalesce $retryPolicy.retryOn "reset,connect-failure,refused-stream,retriable-status-codes" }}
          {{- if $retryPolicy.retriableStatusCode }}
                      retriable_status_codes: 
              {{- range $retryPolicy.retriableStatusCode }}
                        - {{ . }}
              {{- end }}
          {{- end }}
          {{- if $retryPolicy.hostSelectionRetryMaxAttempts }}
                      host_selection_retry_max_attempts: {{ $retryPolicy.hostSelectionRetryMaxAttempts }}
          {{- end }}
                    timeout: {{ coalesce $cluster.timeout "15s" }}
      {{- if $cluster.idleTimeout }}
                    idle_timeout: {{ $cluster.idleTimeout }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
