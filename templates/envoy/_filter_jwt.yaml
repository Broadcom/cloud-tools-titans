{{- define "titan-mesh-helm-lib-chart.envoy.filter.jwt" }}
  {{- $requests := .requests  }}
  {{- $issuers := .issuers  }}
  {{- $providers := list  }}
  {{- $tokenValidation := false  }}
  {{- $tokenValidationBypass := false  }}
  {{- $routes := $requests.routes }}
  {{- $additionalRoutes := $requests.additionalRoutes }}
  {{- if and $additionalRoutes $routes }}
    {{- $routes = concat $additionalRoutes $routes }}
  {{- end }}
  {{- range $routes  }}
    {{- $tokenCheck := ternary .tokenCheck (default ($requests.tokenCheck | default false)) (hasKey . "tokenCheck")  }}
    {{- $tokenBypass := ternary (not .tokenCheck) (ternary (not $requests.tokenCheck) true (hasKey $requests "tokenCheck")) (hasKey . "tokenCheck")  }}
    {{- if $tokenCheck  }}
      {{- $tokenValidation = true  }}
    {{- end  }}
    {{- if $tokenBypass  }}
      {{- $tokenValidationBypass = true  }}
    {{- end  }}
  {{- end  }}
  {{- if $tokenValidation }}
- name: envoy.filters.http.jwt_authn
  typed_config:
    "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
    providers:
    {{- range $issuers }}
      {{- $provider := printf "provider-%s" (adler32sum .issuer)  }}
      {{- $providers = append $providers $provider  }}
      {{ $provider }}:
        forward: true
        issuer: {{ required "value 'titanSideCars.issuers[].issuer' is required" .issuer }}
        from_headers:
        - name: Authorization
          value_prefix: "Bearer "
      {{- if .locations  }}
        {{- range .locations.fromHeaders }}
          {{- if and (ne .name "Authorization") (ne .valuePrefix "Bearer ") }}
        - name: {{ .name }}
              {{- if .valuePrefix }}
          value_prefix: {{ .valuePrefix | quote }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .locations.fromParams }}
        from_params:
          {{- range .locations.fromParams }}
        - {{ . }}
          {{- end }}
        {{- end }}
      {{- end }}
        remote_jwks:
          cache_duration:
            seconds: {{ .cacheDuration | default "31556952" }} 
          http_uri:
            uri: {{ required "value 'titanSideCars.issuers[].jwks' is required to retrieve issuer's public keys" .jwks }}
            cluster: {{ .cluster }}
            timeout:
              seconds: {{ .timeout | default "1" }}
    {{- end }}
    rules:
    {{- $allBypass := ternary (not $requests.tokenCheck) true (hasKey $requests "tokenCheck") }}
    {{- range $routes }}
      {{- $tokenCheck := false }}
      {{- if $allBypass }}
        {{- $tokenCheck = ternary .tokenCheck false (hasKey . "tokenCheck") }}
      {{- else }}
        {{- $tokenCheck = ternary .tokenCheck true (hasKey . "tokenCheck") }}
      {{- end }}
      {{- if .match }}
        {{- if or .match.prefix  .match.regex }}
          {{- if or (and $allBypass $tokenCheck) (and (not $allBypass) (not $tokenCheck)) }}
    - match:
            {{- include "titan-mesh-helm-lib-chart-1.1.1.envoy.matcher-route" (dict "route" .match "routing" true) | nindent 6 }}
            {{- if $tokenCheck }}
      requires:
              {{- if eq (len $providers) 1 }}
        provider_name: {{ first $providers }}
              {{- else }}
        requires_any:
          requirements:
                {{- range $providers }}
          - provider_name: {{ . }}
                {{- end }}              
              {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
    {{- end }}
    - match:
        prefix: /
    {{- if not $allBypass }}
      requires:
      {{- if eq (len $providers) 1 }}
        provider_name: {{ first $providers }}
      {{- else }}
        requires_any:
          requirements:
        {{- range $providers }}
          - provider_name: {{ . }}
        {{- end }}              
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}