{{- define "titan-mesh-helm-lib-chart.envoy.filter.ratelimit" }}
  {{- $appName := .appName }}
  {{- $titanSideCars := .titanSideCars }}
  {{- $envoy := $titanSideCars.envoy }}
  {{- $clusters := $envoy.clusters }}
  {{- $localMyApp := index $clusters "local-myapp" }}
  {{- $ratelimit := $envoy.ratelimit }}
  {{- $ingress := .ingress }}

  {{- $ratelimitSidecarEnabled := eq (include "static.titan-mesh-helm-lib-chart.ratelimitEnabled" $titanSideCars) "true" -}}
  {{- $ingressRatelimit := $ingress.ratelimit }}
  {{- $ratelimitEnabled := (ternary $ingressRatelimit.enabled "true" (hasKey $ingressRatelimit "enabled")) }}
  {{- $hasRatelimit := false }}

  {{- $gateway := $localMyApp.gateway }}
  {{- $gatewayEnable := $gateway.enabled }}
  {{- $routes := list }}
  {{- if $gatewayEnable }}
    {{- range $cn, $cv := $clusters }}
      {{- if and (ne $cn "local-myapp") (ne $cn "remote-myapp") }}
        {{- range $cv.routes }}
          {{- $newcluster := dict "cluster" $cn }}
          {{- $routes = append $routes (dict "match" .match "route" $newcluster "ratelimit" .ratelimit) }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- else }}
    {{- $routes = $ingress.routes }}
    {{- if and $ingress (not $routes) }}
      {{- if ternary $ingress.enabled true (hasKey $ingress "enabled") }}
        {{ $routes = $localMyApp.routes }}
      {{- end }}
    {{- end }}
    {{- $additionalRoutes := $ingress.additionalRoutes }}
    {{- if $additionalRoutes }}
      {{- if $routes }}
        {{- $routes = concat $additionalRoutes $routes }}
      {{- else }}
        {{- $routes = $additionalRoutes }}
      {{- end }}
    {{- end }}
  {{- end }}

  {{- range $routes }}
    {{- $rt := .ratelimit }}
    {{- $hasRatelimit = or $hasRatelimit (ternary $rt.enabled ($rt | default false) (hasKey $rt "enabled")) }}
  {{- end }}
  {{- if and $ratelimitEnabled $hasRatelimit }}
- name: envoy.filters.http.ratelimit
  typed_config:
    "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
    domain: {{ $ratelimit.domain | default $appName }}
    failure_mode_deny: {{ $ratelimit.failureModeDeny | default "false" }}
    enable_x_ratelimit_headers: {{ $ratelimit.enableRatelimitResponseHeaders | default "DRAFT_VERSION_03" }}
    rate_limit_service:
      transport_api_version: V3
      grpc_service:
        envoy_grpc:
          cluster_name: ratelimit
        timeout: 0.5s
  {{- end }}
{{- end }}